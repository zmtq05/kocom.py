[RS485]
#------------
# [RS485]
# type (required) : serial (RS485 directly attatched as a serial port of the home server such as USB RS485 adapter) / socket (RS485 socket server such as Elfin EW11)
#
# serial_port (optional) : serial port path (default=/dev/ttyUSB0 in Linux, default=com3 in Windows)
#
# socket_server (required when type=socket) : address of remote serial server (eg. 192.168.1.100)
# socket_port (required when type=socket) : port number of remote serial server (eg. 5050)
#------------
#type = serial
#serial_port = /dev/ttyUSB0
type = socket
socket_server = 192.168.0.18
socket_port = 8899


[MQTT]
#------------
# [MQTT]
# mqtt_server (required) : address of the mqtt server (eg. 127.0.0.1)
# mqtt_port (required) : port number of the mqtt server (eg. 1883)
#
# mqtt_allow_anonymous (required) : True(anonymous connect) / False (Use mqtt_username, mqtt_password)
# mqtt_username (required when mqtt_allow_anonymous=False) : mqtt username
# mqtt_password (required when mqtt_allow_anonymous=False) : mqtt password
#------------
mqtt_server = 192.168.0.19
mqtt_port = 1883
mqtt_allow_anonymous = False
mqtt_username = kocom
mqtt_password = kocom


[Device]
#------------
# [Device]
# enabled (required) : list of devices
#    - can be 'devicetype' alone if there's only one device in the location (eg. light, fan)
#    - can be 'devicetype_roomname' if there are sub devices (eg. thermo_room3)
#  * supported devicetypes : light, gas, fan, thermo, elevator, ac
#  * supported roomnames : myhome, livingroom, bedroom, room1, room2
#------------
enabled = light_room1, thermo_room1


[Elevator]
#------------
# [Elevator]
# type (optional) : rs485 / tcpip (defalut=rs485)
#
# rs485_floor (optional): if your wallpad is capable of sending additional RS485 packet when elevator arrives, then set this variable to the floor where you live in. (eg. 10) (default=0, which means not supported)
#
# *** WARNING *** DON'T SET IT TO TCPIP UNLESS YOU KNOW WHAT YOU'RE DOING. IT MAY DESTROY WHOLE APARTMENT NETWORK. THE AUTHOR OF THE SCRIPT IS NOT LIABLE FOR ANY DAMAGE TO YOUR APARTMENT NETWORK.
# tcpip_apt_server (required when type=tcpip): ip address of the elevator server
# tcpip_apt_port (required when type=tcpip): port number of the elevator server
# tcpip_packet1 (required when type=tcpip): 1st packet(132bytes) to send when calling elevator. you must capture your own packet and write it to this config file to make it work properly.
# tcpip_packet2 (required when type=tcpip): 2nd packet(64bytes) to send when calling elevator. you must capture your own packet and write it to this config file to make it work properly.
# tcpip_packet3 (required when type=tcpip): 3rd packet(36bytes) to send when calling elevator. you must capture your own packet and write it to this config file to make it work properly.
# tcpip_packet4 (required when type=tcpip): packet(44bytes) to receive when elevator arrives. you must capture your own packet and write it to this config file to make it work properly.
#------------
type = rs485
rs485_floor = 15

# *** WARNING *** DON'T SET IT TO TCPIP UNLESS YOU KNOW WHAT YOU'RE DOING. IT MAY DESTROY WHOLE APARTMENT NETWORK. THE AUTHOR OF THE SCRIPT IS NOT LIABLE FOR ANY DAMAGE TO YOUR APARTMENT NETWORK.
#type = tcpip
#tcpip_apt_server = 10.x.x.x
#tcpip_apt_port = xxxxx
#tcpip_packet1 = 78563412000000026800000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#tcpip_packet2 = 78563412040000022400000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#tcpip_packet3 = 785634127a0000020800000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#tcpip_packet4 = 785634127b0000021000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx


[Log]
#------------
# [Log]
# show_query_hex (required) : True / False (refer source code for each option)
# show_recv_hex (required) : True / False (refer source code for each option)
# show_mqtt_publish (required) : True / False (refer source code for each option)
#------------
show_query_hex = True
show_recv_hex = True
show_mqtt_publish = True
show_mqtt_discovery = False

[User]
# init_temp (required) : Temperature
# init_fan_mode (required) : Low, Medium, High
# light_count (required) : Light Count
init_temp = 23
init_fan_mode = Medium
light_count = 3
thermo_init_temp = 23
ac_init_temp = 21
ac_init_mode = cool
fan_init_fan_mode = low
ac_init_fan_mode = LOW
